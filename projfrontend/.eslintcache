[{"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/Routes.js":"1","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Home.js":"2","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/index.js":"3","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Base.js":"4","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/backend.js":"5","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Menu.js":"6","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/Signup.js":"7","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/Signin.js":"8","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/auth/helper/index.js":"9","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/auth/helper/AdminRoutes.js":"10","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/UserDashBoard.js":"11","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/AdminDashBoard.js":"12","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/Profile.js":"13","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/auth/helper/PrivateRoutes.js":"14","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/AddCategory.js":"15","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/helper/adminapicall.js":"16","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/ManageCategories.js":"17","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/AddProduct.js":"18","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/ManageProducts.js":"19","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/UpdateProduct.js":"20","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/UpdateCategory.js":"21","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Card.js":"22","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/ImageHelper.js":"23","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/coreapicalls.js":"24","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/cartHelper.js":"25","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Cart.js":"26","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/StripeCheckout.js":"27","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/orderHelper.js":"28","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/PaymentB.js":"29","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/paymentBHelper.js":"30"},{"size":1941,"mtime":1612979588817,"results":"31","hashOfConfig":"32"},{"size":1051,"mtime":1612981995782,"results":"33","hashOfConfig":"32"},{"size":153,"mtime":1612289456555,"results":"34","hashOfConfig":"32"},{"size":946,"mtime":1612557771922,"results":"35","hashOfConfig":"32"},{"size":46,"mtime":1612291004280,"results":"36","hashOfConfig":"32"},{"size":2339,"mtime":1612466089670,"results":"37","hashOfConfig":"32"},{"size":3505,"mtime":1612363698936,"results":"38","hashOfConfig":"32"},{"size":3441,"mtime":1612465925508,"results":"39","hashOfConfig":"32"},{"size":1362,"mtime":1612550571951,"results":"40","hashOfConfig":"32"},{"size":570,"mtime":1612465575791,"results":"41","hashOfConfig":"32"},{"size":233,"mtime":1612465487214,"results":"42","hashOfConfig":"32"},{"size":2383,"mtime":1612975421729,"results":"43","hashOfConfig":"32"},{"size":209,"mtime":1612465522891,"results":"44","hashOfConfig":"32"},{"size":537,"mtime":1612465579112,"results":"45","hashOfConfig":"32"},{"size":3620,"mtime":1612689365082,"results":"46","hashOfConfig":"32"},{"size":3263,"mtime":1612690742402,"results":"47","hashOfConfig":"32"},{"size":2490,"mtime":1612688157013,"results":"48","hashOfConfig":"32"},{"size":5606,"mtime":1612688675608,"results":"49","hashOfConfig":"32"},{"size":2446,"mtime":1612678239475,"results":"50","hashOfConfig":"32"},{"size":6615,"mtime":1612975584156,"results":"51","hashOfConfig":"32"},{"size":4427,"mtime":1612691588498,"results":"52","hashOfConfig":"32"},{"size":2251,"mtime":1612981964019,"results":"53","hashOfConfig":"32"},{"size":566,"mtime":1612896776649,"results":"54","hashOfConfig":"32"},{"size":576,"mtime":1613212975740,"results":"55","hashOfConfig":"32"},{"size":1023,"mtime":1613475722644,"results":"56","hashOfConfig":"32"},{"size":1739,"mtime":1613401295228,"results":"57","hashOfConfig":"32"},{"size":1927,"mtime":1613214234722,"results":"58","hashOfConfig":"32"},{"size":463,"mtime":1612982712578,"results":"59","hashOfConfig":"32"},{"size":2755,"mtime":1613476531408,"results":"60","hashOfConfig":"32"},{"size":839,"mtime":1613413585807,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"qtcifu",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/Routes.js",["138"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport AdminRoute from \"./auth/helper/AdminRoutes\";\nimport PrivateRoute from \"./auth/helper/PrivateRoutes\";\n\nimport Home from \"./core/Home\";\nimport Cart from \"./core/Cart\";\nimport Signup from \"./user/Signup\";\nimport Signin from \"./user/Signin\";\nimport UserDashBoard from \"./user/UserDashBoard\";\nimport AdminDashBoard from \"./user/AdminDashBoard\";\nimport Profile from \"./user/Profile\";\nimport AddCategory from \"./admin/AddCategory\";\nimport ManageCategories from \"./admin/ManageCategories\";\nimport UpdateCategory from \"./admin/UpdateCategory\";\nimport AddProduct from \"./admin/AddProduct\";\nimport ManageProducts from \"./admin/ManageProducts\";\nimport UpdateProduct from \"./admin/UpdateProduct\";\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/cart\" component={Cart} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/signin\" component={Signin} />\n        <PrivateRoute exact path=\"/user/dashboard\" component={UserDashBoard} />\n        <AdminRoute exact path=\"/admin/dashboard\" component={AdminDashBoard} />\n        <AdminRoute\n          exact\n          path=\"/admin/create/category\"\n          component={AddCategory}\n        />\n        <AdminRoute exact path=\"/admin/create/product\" component={AddProduct} />\n        <AdminRoute\n          exact\n          path=\"/admin/categories\"\n          component={ManageCategories}\n        />\n        <AdminRoute exact path=\"/admin/products\" component={ManageProducts} />\n        <AdminRoute\n          path=\"/admin/category/update/:categoryId\"\n          component={UpdateCategory}\n        />\n        <AdminRoute\n          path=\"/admin/product/update/:productId\"\n          component={UpdateProduct}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n",["139","140"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Home.js",["141"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { getAllProducts } from \"./helper/coreapicalls\";\n\nconst Home = () => {\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(false);\n\n  const loadAllProducts = () => {\n    getAllProducts().then((data) => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProducts(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadAllProducts();\n  }, []);\n\n  return (\n    <Base title=\"Home Page\" description=\"Welcome to the Store\">\n      <div className=\"row text-center\">\n        <h1 className=\"text-white\">All of the Products</h1>\n        <div className=\"row\">\n          {products.map((product, index) => {\n            return (\n              <div key={index} className=\"col-4 mb-4\">\n                <Card product={product} addToCart={true} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Base>\n  );\n}\n\nexport default Home;",["142","143"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/index.js",[],["144","145"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Base.js",[],["146","147"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/backend.js",[],["148","149"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Menu.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/Signup.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/Signin.js",["150"],"import React, {useState} from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { signin, isAuthenticated, authenticate } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"test1@store.com\",\n    password: \"test1\",\n    error: \"\",\n    loading: false,\n    didRedirect: false,\n  });\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAuthenticated();\n\n  const handleChange = (data) => (event) => {\n    setValues({ ...values, error: false, [data]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then((data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              email: \"\",\n              password: \"\",\n              error: \"\",\n              loading: false,\n              didRedirect: true,\n            });\n          });\n        }\n      })\n      .catch(console.log(\"Error in SignIn - onSubmit()\"));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <Redirect to=\"/admin/dashboard\" />;\n      } else {\n        return <Redirect to=\"/user/dashboard\" />;\n      }\n    }\n    if (isAuthenticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    )\n  };\n\n  const failureMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"email\")}\n                type=\"email\"\n                value={email}\n                placeholder=\"Email@email.com\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"password\")}\n                type=\"password\"\n                value={password}\n                placeholder=\"Password\"\n              />\n            </div>\n            <div className=\"d-grid gap-6\">\n              <button className=\"btn btn-success btn-block\" onClick={onSubmit}>\n                Sign In\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In Page\" description=\"A page for user to signin!\">\n      {loadingMessage()}\n      {failureMessage()}\n      {signInForm()}\n      {performRedirect()}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/auth/helper/index.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/auth/helper/AdminRoutes.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/UserDashBoard.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/AdminDashBoard.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/user/Profile.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/auth/helper/PrivateRoutes.js",[],["151","152"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/AddCategory.js",["153"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { createCategory } from \"./helper/adminapicall\";\n\nconst AddCategory = () => {\n  const { user, authToken } = isAuthenticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    error: \"\",\n    loading: false,\n    createdCategory: \"\",\n    getRedirect: false,\n  });\n\n  const { name, error, loading, createdCategory, getRedirect } = values;\n\n  const goBack = () => {\n    return (\n      <div className=\"mt-5\">\n        <Link className=\"btn btn-sm btn-success mb-3\" to=\"/admin/dashboard\">\n          Admin Home\n        </Link>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    if (getRedirect) {\n      const time = setTimeout(() => setValues({ getRedirect: 1 }), 3000);\n      return () => {\n        clearTimeout(time);\n      };\n    }\n  }, [getRedirect]);\n\n  const handleChange = (data) => (event) => {\n    setValues({\n      ...values,\n      error: false,\n      loading: false,\n      [data]: event.target.value,\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n\n    // backend  request fire\n    createCategory(user._id, authToken, { name }).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error, loading: false });\n      } else {\n        setValues({\n          error: \"\",\n          name: \"\",\n          createdCategory: data.name,\n          getRedirect: true,\n        });\n      }\n    });\n  };\n\n  const successMessage = () => {\n    return (\n      <div\n        className=\"alert alert-success mt-3\"\n        style={{ display: createdCategory ? \"\" : \"none\" }}\n      >\n        <h4>{createdCategory} created successfully</h4>\n        <h6 className=\"text-right text-info\">Redirecting...</h6>\n      </div>\n    );\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info mt-3\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const failureMessage = () => {\n    return (\n      <div\n        className=\"alert alert-danger\"\n        style={{ display: error ? \"\" : \"none\" }}\n      >\n        {error}\n      </div>\n    );\n  };\n\n  const redirect = () => {\n    if (getRedirect === 1) return <Redirect to=\"/admin/dashboard\" />;\n  };\n\n  const createCategoryForm = () => {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <p className=\"lead mt-3\">Enter the category</p>\n          <input\n            type=\"text\"\n            className=\"form-control my-3\"\n            onChange={handleChange(\"name\")}\n            value={name}\n            autoFocus\n            required\n            placeholder=\"Eg. Summer\"\n          />\n          <button onClick={onSubmit} className=\"btn btn-outline-info\">\n            Create Category\n          </button>\n        </div>\n      </form>\n    );\n  };\n\n  return (\n    <Base\n      title=\"Create a Category\"\n      description=\"Add new category for the store\"\n      className=\"container bg-info p-4\"\n    >\n      <Link className=\"btn btn-sm btn-dark mb-3\" to=\"/admin/dashboard\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {loadingMessage()}\n          {failureMessage()}\n          {redirect()}\n          {createCategoryForm()}\n        </div>\n      </div>\n      {/* <p className=\"text-white bg-danger text-center\">{name}, {error}, {success}</p> */}\n    </Base>\n  );\n};\n\nexport default AddCategory;\n","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/helper/adminapicall.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/ManageCategories.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/AddProduct.js",["154","155","156"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getAllCategories, createProduct } from \"./helper/adminapicall\";\nimport { isAuthenticated } from \"../auth/helper/index\";\n\nconst AddProduct = () => {\n  const { user, authToken } = isAuthenticated();\n\n  const [values, setValues] = useState({\n    photo: \"\",\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    categories: [],\n    category: \"\",\n    stock: \"\",\n    error: \"\",\n    loading: false,\n    createdProduct: \"\",\n    getRedirect: false,\n    formData: \"\",\n  });\n\n  const {\n    photo,\n    name,\n    description,\n    price,\n    categories,\n    category,\n    stock,\n    error,\n    loading,\n    createdProduct,\n    getRedirect,\n    formData,\n  } = values;\n\n  const preload = () => {\n    getAllCategories().then((data) => {\n      // console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ ...values, categories: data, formData: new FormData() });\n        // console.log(categories);\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload();\n  }, []);\n\n  useEffect(() => {\n    if (getRedirect) {\n      const time = setTimeout(() => setValues({ getRedirect: 1 }), 3000);\n      return () => {\n        clearTimeout(time);\n      };\n    }\n  }, [getRedirect]);\n\n  const handleChange = (data) => (event) => {\n    const value = data === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(data, value);\n    setValues({\n      ...values,\n      error: false,\n      loading: false,\n      [data]: value,\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    createProduct(user._id, authToken, formData)\n      .then((data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          setValues({\n            ...values,\n            photo: \"\",\n            name: \"\",\n            description: \"\",\n            price: \"\",\n            stock: \"\",\n            error: false,\n            loading: false,\n            createdProduct: data.name,\n            getRedirect: true\n          });\n        }\n      })\n      .catch((err) => console.log(\"Error is AddProduct - onSubmit() - \", err));\n  };\n\n  const successMessage = () => {\n    return (\n      <div\n        className=\"alert alert-success mt-3\"\n        style={{ display: createdProduct ? \"\" : \"none\" }}\n      >\n        <h4>{createdProduct} created successfully</h4>\n        <h6 className=\"text-right text-info\">Redirecting...</h6>\n      </div>\n    );\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info mt-3\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const failureMessage = () => {\n    return (\n      <div\n        className=\"alert alert-danger\"\n        style={{ display: error ? \"\" : \"none\" }}\n      >\n        {error}\n      </div>\n    );\n  };\n\n  const redirect = () => {\n    if (getRedirect === 1) return <Redirect to=\"/admin/dashboard\" />;\n  };\n\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Quantity\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Create Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Add Product here!\"\n      description=\"Welcome to product creation area\"\n      className=\"conatiner bg-info p-4\"\n    >\n      <Link className=\"btn btn-sm btn-dark mb-3\" to=\"/admin/dashboard\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {loadingMessage()}\n          {failureMessage()}\n          {redirect()}\n          {createProductForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AddProduct;\n","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/ManageProducts.js",[],["157","158"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/UpdateProduct.js",["159","160","161"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  getAllCategories,\n  getProduct,\n  updateProduct,\n} from \"./helper/adminapicall\";\nimport { isAuthenticated } from \"../auth/helper/index\";\n\nconst UpdateProduct = ({ match }) => {\n  const { user, authToken } = isAuthenticated();\n\n  const [values, setValues] = useState({\n    photo: \"\",\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    categories: [],\n    category: \"\",\n    stock: \"\",\n    error: \"\",\n    loading: false,\n    createdProduct: \"\",\n    getRedirect: false,\n    formData: \"\",\n  });\n\n  const {\n    photo,\n    name,\n    description,\n    price,\n    categories,\n    category,\n    stock,\n    error,\n    loading,\n    createdProduct,\n    getRedirect,\n    formData,\n  } = values;\n\n  const preloadCategories = () => {\n    getAllCategories().then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ categories: data, formData: new FormData() });\n      }\n    });\n  };\n\n  const preload = (productId) => {\n    getProduct(productId).then((data) => {\n      //   console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: data.name ? data.name : \"\",\n          description: data.description ? data.description : \"\",\n          price: data.price ? data.price : \"\",\n          category: data.category ? data.category._id : \"\",\n          stock: data.stock ? data.stock : \"\",\n          formData: new FormData(),\n          getRedirect: false,\n          createdProduct: \"\",\n        });\n        preloadCategories();\n        // console.log(categories);\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload(match.params.productId);\n  }, []);\n\n  useEffect(() => {\n    if (getRedirect) {\n      const time = setTimeout(() => setValues({ getRedirect: 1 }), 3000);\n      return () => {\n        clearTimeout(time);\n      };\n    }\n  }, [getRedirect]);\n\n  const handleChange = (data) => (event) => {\n    const value = data === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(data, value);\n    setValues({\n      ...values,\n      error: false,\n      loading: false,\n      [data]: value,\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    updateProduct(match.params.productId, user._id, authToken, formData)\n      .then((data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          setValues({\n            ...values,\n            photo: \"\",\n            name: \"\",\n            description: \"\",\n            price: \"\",\n            stock: \"\",\n            error: false,\n            loading: false,\n            createdProduct: data.name,\n            getRedirect: true,\n          });\n        }\n      })\n      .catch((err) =>\n        console.log(\"Error in UpdateProduct - onSubmit() - \", err)\n      );\n  };\n\n  const successMessage = () => {\n    return (\n      <div\n        className=\"alert alert-success mt-3\"\n        style={{ display: createdProduct ? \"\" : \"none\" }}\n      >\n        <h4>{createdProduct} updated successfully</h4>\n        <h6 className=\"text-right text-info\">Redirecting...</h6>\n      </div>\n    );\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info mt-3\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const failureMessage = () => {\n    return (\n      <div\n        className=\"alert alert-danger\"\n        style={{ display: error ? \"\" : \"none\" }}\n      >\n        {error}\n      </div>\n    );\n  };\n\n  const redirect = () => {\n    if (getRedirect === 1) return <Redirect to=\"/admin/products\" />;\n  };\n\n  const updateProductForm = () => {\n    return (\n      <form>\n        <span>Post photo</span>\n        <div className=\"form-group\">\n          <label className=\"btn btn-block btn-success\">\n            <input\n              onChange={handleChange(\"photo\")}\n              type=\"file\"\n              name=\"photo\"\n              accept=\"image\"\n              placeholder=\"choose a file\"\n            />\n          </label>\n        </div>\n        <div className=\"form-group\">\n          <input\n            onChange={handleChange(\"name\")}\n            className=\"form-control\"\n            placeholder=\"Name\"\n            value={name}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            onChange={handleChange(\"description\")}\n            className=\"form-control\"\n            placeholder=\"Description\"\n            value={description}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            onChange={handleChange(\"price\")}\n            type=\"number\"\n            className=\"form-control\"\n            placeholder=\"Price\"\n            value={price}\n          />\n        </div>\n        <div className=\"form-group\">\n          <select\n            onChange={handleChange(\"category\")}\n            className=\"form-control\"\n            placeholder=\"Category\"\n          >\n            <option>Select</option>\n            {categories &&\n              categories.map((cate, index) => (\n                <option key={index} value={cate._id}>\n                  {cate.name}\n                </option>\n              ))}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input\n            onChange={handleChange(\"stock\")}\n            type=\"number\"\n            className=\"form-control\"\n            placeholder=\"Quantity\"\n            value={stock}\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          onClick={onSubmit}\n          className=\"btn btn-outline-success mb-3\"\n        >\n          Update Product\n        </button>\n      </form>\n    );\n  };\n\n  return (\n    <Base\n      title=\"Update Product here!\"\n      description=\"Welcome to product updation area\"\n      className=\"conatiner bg-info p-4\"\n    >\n      <Link className=\"btn btn-sm btn-dark mb-3\" to=\"/admin/dashboard\">\n        Admin Home\n      </Link>\n      <Link className=\"btn btn-sm btn-dark mb-3 ml-3\" to=\"/admin/products\">\n        Manage Products\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {loadingMessage()}\n          {failureMessage()}\n          {redirect()}\n          {updateProductForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateProduct;\n","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/admin/UpdateCategory.js",["162","163","164"],"import React, { useState, useEffect, useRef } from \"react\";\nimport Base from \"../core/Base\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getCategory, updateCategory } from \"./helper/adminapicall\";\n\nconst UpdateCategory = ({ match }) => {\n  const { user, authToken } = isAuthenticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    error: \"\",\n    loading: false,\n    createdCategory: \"\",\n    getRedirect: false,\n  });\n\n  const { name, error, loading, createdCategory, getRedirect } = values;\n\n  const usePreviousValue = value => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  const goBack = () => {\n    return (\n      <div className=\"mt-5\">\n        <Link className=\"btn btn-sm btn-success mb-3\" to=\"/admin/dashboard\">\n          Admin Home\n        </Link>\n      </div>\n    );\n  };\n\n  const preload = (categoryId) => {\n    getCategory(categoryId).then((data) => {\n      //   console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: data.name,\n          getRedirect: false,\n          createdCategory: \"\",\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload(match.params.categoryId);\n  }, []);\n\n  useEffect(() => {\n    if (getRedirect) {\n      const time = setTimeout(() => setValues({ getRedirect: 1 }), 3000);\n      return () => {\n        clearTimeout(time);\n      };\n    }\n  }, [getRedirect]);\n\n  const handleChange = (data) => (event) => {\n    setValues({\n      ...values,\n      error: false,\n      loading: false,\n      [data]: event.target.value,\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n\n    // backend  request fire\n    updateCategory(match.params.categoryId, user._id, authToken, { name }).then(\n      (data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          setValues({\n            error: \"\",\n            name: \"\",\n            createdCategory: data.name,\n            getRedirect: true,\n          });\n        }\n      }\n    );\n  };\n\n  const successMessage = () => {\n    return (\n      <div\n        className=\"alert alert-success mt-3\"\n        style={{ display: createdCategory ? \"\" : \"none\" }}\n      >\n        <h4>{createdCategory} created successfully</h4>\n        <h6 className=\"text-right text-info\">Redirecting...</h6>\n      </div>\n    );\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info mt-3\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const failureMessage = () => {\n    return (\n      <div\n        className=\"alert alert-danger\"\n        style={{ display: error ? \"\" : \"none\" }}\n      >\n        {error}\n      </div>\n    );\n  };\n\n  const redirect = () => {\n    if (getRedirect === 1) return <Redirect to=\"/admin/categories\" />;\n  };\n\n  const updateCategoryForm = () => {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <p className=\"lead mt-3\">Enter new category </p>\n          <input\n            type=\"text\"\n            className=\"form-control my-3\"\n            onChange={handleChange(\"name\")}\n            value={name}\n            autoFocus\n            required\n            placeholder=\"Eg. Summer\"\n          />\n          <button onClick={onSubmit} className=\"btn btn-outline-info\">\n            Update Category\n          </button>\n        </div>\n      </form>\n    );\n  };\n\n  return (\n    <Base\n      title=\"Update Category here!\"\n      description=\"Welcome to product updation area\"\n      className=\"container bg-info p-4\"\n    >\n      <Link className=\"btn btn-sm btn-dark mb-3\" to=\"/admin/dashboard\">\n        Admin Home\n      </Link>\n      <Link className=\"btn btn-sm btn-dark mb-3 ml-3\" to=\"/admin/categories\">\n        Manage Categories\n      </Link>\n      <div className=\"row bg-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {loadingMessage()}\n          {failureMessage()}\n          {redirect()}\n          {updateCategoryForm()}\n        </div>\n      </div>\n      {/* <p className=\"text-white bg-danger text-center\">{name}, {error}, {success}</p> */}\n    </Base>\n  );\n};\n\nexport default UpdateCategory;\n","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Card.js",["165","166"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/ImageHelper.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/coreapicalls.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/cartHelper.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/Cart.js",["167","168"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { loadCart } from \"./helper/cartHelper\";\nimport StripeCheckout from \"./StripeCheckout\";\nimport PaymentB from \"./PaymentB\";\n\nconst Cart = () => {\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => {\n    setProducts(loadCart());\n  }, [reload]);\n\n  const loadAllProducts = (products) => {\n    return (\n      <div>\n        <h2>This section is to load all products</h2>\n        {products &&\n          products.map((product, index) => {\n            return (\n              <Card\n                key={index}\n                product={product}\n                removeFromCart={true}\n                setReload={setReload}\n                reload={reload}\n              />\n            );\n          })}\n      </div>\n    );\n  };\n\n  const loadCheckout = () => {\n    return (\n      <div>\n        <h2>This section is for checkout</h2>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Cart Page\" description=\"Ready for checkout!\">\n      <div className=\"row text-center\">\n        <div className=\"col-6\">\n          {products ? loadAllProducts(products) : <h3>No Products in cart</h3>}\n        </div>\n        <div className=\"col-6\">\n          {loadCheckout()}\n          <StripeCheckout\n            products={products}\n            setReload={setReload}\n            reload={reload}\n          />\n          <h3 className=\"text-info p-6\">Checkout via Braintree</h3>\n          <PaymentB products={products} setReload={setReload} reload={reload} />\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Cart;\n","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/StripeCheckout.js",["169","170","171","172","173"],"import React, { useState } from \"react\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckoutComponent from \"react-stripe-checkout\";\nimport { makeStripePayment } from \"./helper/coreapicalls\";\nimport { createOrder } from \"./helper/orderHelper\";\nimport { emptyCart } from \"./helper/cartHelper\";\n\nconst StripeCheckout = ({\n  products,\n  setReload = (f) => f,\n  reload = undefined,\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\",\n  });\n\n  const authToken = isAuthenticated() && isAuthenticated().authToken;\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const getTotal = () => {\n    return products ? products.reduce((sum, prod) => sum + prod.price, 0) : 0;\n  };\n\n  const makePayment = (token) => {\n    makeStripePayment({ token, products }).then((data) => {\n      if (data.error) {\n        setData({ ...data, error: data.error, loading: false });\n      } else {\n        // console.log(\"DATA\", data);\n        const { status } = data;\n        emptyCart(() => {\n          setReload(!reload);\n        });\n        // TODO: set order data\n      }\n    });\n  };\n\n  const showStripeButton = () => {\n    return isAuthenticated() ? (\n      <StripeCheckoutComponent\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\n        token={makePayment}\n        name=\"Payment Gateway\"\n        amount={getTotal() * 100}\n        shippingAddress\n        billingAddress\n      >\n        <button className=\"btn btn-secondary\" disabled>\n          Pay with stripe\n        </button>\n      </StripeCheckoutComponent>\n    ) : (\n      <Link to=\"/signin\">\n        <button className=\"btn btn-info\">Sign in</button>\n      </Link>\n    );\n  };\n\n  return (\n    <div>\n      <h3 className=\"text-white\">Stripe checkout {getTotal()} ...</h3>\n      {showStripeButton()}\n    </div>\n  );\n};\n\nexport default StripeCheckout;\n","/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/orderHelper.js",[],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/PaymentB.js",["174","175","176"],"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/helper/paymentBHelper.js",[],{"ruleId":"177","severity":1,"message":"178","line":12,"column":8,"nodeType":"179","messageId":"180","endLine":12,"endColumn":15},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"177","severity":1,"message":"185","line":9,"column":10,"nodeType":"179","messageId":"180","endLine":9,"endColumn":15},{"ruleId":"181","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"181","replacedBy":"188"},{"ruleId":"183","replacedBy":"189"},{"ruleId":"181","replacedBy":"190"},{"ruleId":"183","replacedBy":"191"},{"ruleId":"181","replacedBy":"192"},{"ruleId":"183","replacedBy":"193"},{"ruleId":"177","severity":1,"message":"194","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"181","replacedBy":"195"},{"ruleId":"183","replacedBy":"196"},{"ruleId":"177","severity":1,"message":"197","line":20,"column":9,"nodeType":"179","messageId":"180","endLine":20,"endColumn":15},{"ruleId":"177","severity":1,"message":"198","line":26,"column":5,"nodeType":"179","messageId":"180","endLine":26,"endColumn":10},{"ruleId":"177","severity":1,"message":"199","line":31,"column":5,"nodeType":"179","messageId":"180","endLine":31,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":54,"column":6,"nodeType":"202","endLine":54,"endColumn":8,"suggestions":"203"},{"ruleId":"181","replacedBy":"204"},{"ruleId":"183","replacedBy":"205"},{"ruleId":"177","severity":1,"message":"198","line":30,"column":5,"nodeType":"179","messageId":"180","endLine":30,"endColumn":10},{"ruleId":"177","severity":1,"message":"199","line":35,"column":5,"nodeType":"179","messageId":"180","endLine":35,"endColumn":13},{"ruleId":"200","severity":1,"message":"206","line":79,"column":6,"nodeType":"202","endLine":79,"endColumn":8,"suggestions":"207"},{"ruleId":"177","severity":1,"message":"208","line":20,"column":9,"nodeType":"179","messageId":"180","endLine":20,"endColumn":25},{"ruleId":"177","severity":1,"message":"197","line":28,"column":9,"nodeType":"179","messageId":"180","endLine":28,"endColumn":15},{"ruleId":"200","severity":1,"message":"209","line":56,"column":6,"nodeType":"202","endLine":56,"endColumn":8,"suggestions":"210"},{"ruleId":"177","severity":1,"message":"211","line":14,"column":10,"nodeType":"179","messageId":"180","endLine":14,"endColumn":15},{"ruleId":"177","severity":1,"message":"212","line":14,"column":17,"nodeType":"179","messageId":"180","endLine":14,"endColumn":25},{"ruleId":"177","severity":1,"message":"185","line":11,"column":10,"nodeType":"179","messageId":"180","endLine":11,"endColumn":15},{"ruleId":"177","severity":1,"message":"213","line":11,"column":17,"nodeType":"179","messageId":"180","endLine":11,"endColumn":25},{"ruleId":"177","severity":1,"message":"214","line":6,"column":10,"nodeType":"179","messageId":"180","endLine":6,"endColumn":21},{"ruleId":"177","severity":1,"message":"215","line":14,"column":10,"nodeType":"179","messageId":"180","endLine":14,"endColumn":14},{"ruleId":"177","severity":1,"message":"216","line":21,"column":9,"nodeType":"179","messageId":"180","endLine":21,"endColumn":18},{"ruleId":"177","severity":1,"message":"217","line":22,"column":9,"nodeType":"179","messageId":"180","endLine":22,"endColumn":15},{"ruleId":"177","severity":1,"message":"218","line":34,"column":17,"nodeType":"179","messageId":"180","endLine":34,"endColumn":23},{"ruleId":"177","severity":1,"message":"194","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"219","line":33,"column":6,"nodeType":"202","endLine":33,"endColumn":8,"suggestions":"220"},{"ruleId":"177","severity":1,"message":"221","line":42,"column":9,"nodeType":"179","messageId":"180","endLine":42,"endColumn":17},"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","no-native-reassign",["222"],"no-negated-in-lhs",["223"],"'error' is assigned a value but never used.",["222"],["223"],["222"],["223"],["222"],["223"],["222"],["223"],"'Link' is defined but never used.",["222"],["223"],"'goBack' is assigned a value but never used.","'photo' is assigned a value but never used.","'category' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["224"],["222"],["223"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["225"],"'usePreviousValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.categoryId' and 'preload'. Either include them or remove the dependency array.",["226"],"'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setError' is assigned a value but never used.","'createOrder' is defined but never used.","'data' is assigned a value but never used.","'authToken' is assigned a value but never used.","'userId' is assigned a value but never used.","'status' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authToken' and 'user._id'. Either include them or remove the dependency array.",["227"],"'getNonce' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [preload]",{"range":"236","text":"237"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"238","text":"239"},"Update the dependencies array to be: [match.params.categoryId, preload]",{"range":"240","text":"241"},"Update the dependencies array to be: [authToken, user._id]",{"range":"242","text":"243"},[1162,1164],"[preload]",[1849,1851],"[match.params.productId, preload]",[1361,1363],"[match.params.categoryId, preload]",[998,1000],"[authToken, user._id]"]