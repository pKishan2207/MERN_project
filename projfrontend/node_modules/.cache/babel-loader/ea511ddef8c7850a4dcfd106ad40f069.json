{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/PaymentB.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { emptyCart } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport { getUserToken, processUserPayment } from \"./helper/paymentBHelper\";\nimport { createOrder } from \"./helper/orderHelper\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst PaymentB = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  _s();\n\n  const {\n    user,\n    authToken\n  } = isAuthenticated();\n  const [info, setInfo] = useState({\n    clientToken: null,\n    loading: false,\n    success: false,\n    error: \"\"\n  });\n\n  const getToken = (userId, token) => {\n    getUserToken(userId, token).then(info => {\n      //   console.log(\"INFO\", info);\n      if (info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      }\n\n      const clientToken = info.clientToken;\n      setInfo({\n        clientToken\n      });\n    });\n  };\n\n  useEffect(() => {\n    const response = getToken(user._id, authToken);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Test braintree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentB, \"h7giIsXiqVnd6Bh6mJsxiNiEpkU=\");\n\n_c = PaymentB;\nexport default PaymentB;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentB\");","map":{"version":3,"sources":["/Users/kishankumar.patel/kkp/Project/mernbootcamp/projfrontend/src/core/PaymentB.js"],"names":["React","useEffect","useState","emptyCart","Link","getUserToken","processUserPayment","createOrder","isAuthenticated","DropIn","PaymentB","products","setReload","f","reload","undefined","user","authToken","info","setInfo","clientToken","loading","success","error","getToken","userId","token","then","response","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,yBAAjD;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAS,GAAIC,CAAD,IAAOA,CAA/B;AAAkCC,EAAAA,MAAM,GAAGC;AAA3C,CAAD,KAA4D;AAAA;;AAC3E,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBT,eAAe,EAA3C;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC;AAC/BkB,IAAAA,WAAW,EAAE,IADkB;AAE/BC,IAAAA,OAAO,EAAE,KAFsB;AAG/BC,IAAAA,OAAO,EAAE,KAHsB;AAI/BC,IAAAA,KAAK,EAAE;AAJwB,GAAD,CAAhC;;AAOA,QAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClCrB,IAAAA,YAAY,CAACoB,MAAD,EAASC,KAAT,CAAZ,CAA4BC,IAA5B,CAAkCT,IAAD,IAAU;AACzC;AACA,UAAIA,IAAI,CAACK,KAAT,EAAgB;AACdJ,QAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWK,UAAAA,KAAK,EAAEL,IAAI,CAACK;AAAvB,SAAD,CAAP;AACD;;AACD,YAAMH,WAAW,GAAGF,IAAI,CAACE,WAAzB;AACAD,MAAAA,OAAO,CAAC;AAAEC,QAAAA;AAAF,OAAD,CAAP;AACD,KAPD;AAQD,GATD;;AAWAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,QAAQ,GAAGJ,QAAQ,CAACR,IAAI,CAACa,GAAN,EAAWZ,SAAX,CAAzB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BD;;GAAMP,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { emptyCart } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport { getUserToken, processUserPayment } from \"./helper/paymentBHelper\";\nimport { createOrder } from \"./helper/orderHelper\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst PaymentB = ({ products, setReload = (f) => f, reload = undefined }) => {\n  const { user, authToken } = isAuthenticated();\n\n  const [info, setInfo] = useState({\n    clientToken: null,\n    loading: false,\n    success: false,\n    error: \"\",\n  });\n\n  const getToken = (userId, token) => {\n    getUserToken(userId, token).then((info) => {\n      //   console.log(\"INFO\", info);\n      if (info.error) {\n        setInfo({ ...info, error: info.error });\n      }\n      const clientToken = info.clientToken;\n      setInfo({ clientToken });\n    });\n  };\n\n  useEffect(() => {\n    const response = getToken(user._id, authToken);\n  }, []);\n\n  return (\n    <div>\n      <h3>Test braintree</h3>\n    </div>\n  );\n};\n\nexport default PaymentB;\n"]},"metadata":{},"sourceType":"module"}